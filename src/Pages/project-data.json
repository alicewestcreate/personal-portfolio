[
    {
        "path": "bud",
        "title": "Bud",
        "backgroundImage": "shadyLeaves.webp",
        "demo": "budDemo.gif",
        "alt": "Demo of bud application",
        "blurb": " — A dating app for plants",
        "skills": [
            "React",
            "MUI",
            "Data Manipulation",
            "RESTful APIs"
        ],
        "links": {
            "deployed": "",
            "repo": ""
        },
        "summary": {
            "overview": "Bud is a dating app for plants. Drawing inspiration from Tinder, users take a quiz to find their ideal plant match based on their preferences.",
            "technology": [
                "React",
                "MUI",
                "Data Manipulation",
                "RESTful APIs"
            ],
            "features": [
                "User preferences collected through dynamic quiz",
                "Filter results based on user preferences",
                "Store favourite plants in local storage",
                "Find nearest independent plant store to purchase plant"
            ],
            "design": [
                "Uses RESTful API to get plant information",
                "Questions are dynamically displayed based on users selection",
                "Question are loaded from JSON file",
                "Responsive design for mobile and desktop devices",
                "Clean and modern design overall",
                "Questions dynamically updated from JSON file"
            ],
            "challenges": "One of the challenges I faced was devising an efficient filtering process that would minimize the total number of loops required. To overcome this hurdle, I adopted a basic for loop that eliminated the need for an additional callback function. I then incorporated a for each loop, along with an if statement and includes method, to iterate through the selected preferences and compare them against the property values found in the object. This approach not only streamlined the filter process, but also eliminated the need for data type checks.",
            "testing": "this is testing",
            "results": " Bud is still in the early testing phase, however, it has received positive feedback as a unique concept and sassy style. ",
            "future": [
                "Add swipe left/right feature",
                "Add store to favourites feature",
                "Connect to local independent plant shops",
                "Source API with better imagery"
            ]
        }
    },
    {
        "path": "pool-position",
        "title": "Pool Position",
        "backgroundImage": "wildswimming.jpg",
        "demo": "poolposition.gif",
        "alt": "Demo of pool position application",
        "blurb": " — Wild swimming near you",
        "links": {
            "deployed": "https://codri5.github.io/pool-position/",
            "repo": "https://github.com/codri5/pool-position.git"
        },
        "skills": [
            "Javascript",
            "API",
            "Local Storage"
        ],
        "summ": "Welcome to pool position, The site that connects you to wild swimming spots in Wales. It’s time to scrap the hand drawn maps, and forget the whispers you’ve heard of mysterious far away lands. Pool position, positions you, at your favourite wild swimming spot. Just type the name of the location into the search bar, and our places library and google directions api will direct you straight to the spot.  Or if you looking for a new adventure, just hit swim, at the top of the page to reveal all swimming spots. To make sure you adventure gets off on the right foot, weve even included the weather forecast to help you secure the sunshine. And for those rainy days, just hit the like button to keep them safe for when it’s time.",
        "summary": {
            "overview": "Pool Position positions you at new favorite wild swimming spots in Wales. Just type in the area, and Google Places library will display the location, along with Google Directions API directing you straight to the spot.",
            "technology": [
                "Javascript",
                "Google APIs",
                "Local Storage",
                "Node.js",
                "Bootstrap"
            ],
            "features": [
                "Search functionality, users can search via name or postcode",
                "Map display, the website displays all swimming spots in the area",
                "Get directions, easy link through to Google Maps",
                "Information about each spot, top level information to make quick decision",
                "Save favourites, users can save locations in their local storage"
            ],
            "design": [
                "Uses Google Places and Google Direction API",
                "Utlising local storage for enhanced user experience",
                "Information cards are generated dynamically",
                "Information about swimming spots is accessed through a JSON file",
                "Cohesive design in a simple and clean layout "
            ],
            "challenges": "Pool Position was a group project that we worked on for two weeks. We faced some challenges along the way, but we overcame them by putting our faith in our individual strengths and committing to creating major features of the project.  I took a leap and improved my knowledge of Javascript by writing the logic for dynamically loading the information cards and enabling users to save their favorites in local storage. This was achieved using a single source of truth methodology, which ensured that the user experience was both seamless and efficient.",
            "testing": "this is testing",
            "results": "Overall, Pool Position was a great success, receiving positive feedback in design and concept, and as a team we accomplished a lot in a short amount of time. ",
            "future": [
                "Reorient to a mobile-first design",
                "Expand locations to cover the UK and beyond",
                "Implement filter functionality to sort by swimming spot type",
                "Incorporate a review rating system"
            ]
        }
    },
    {
        "path": "weather-app",
        "title": "Weather App",
        "backgroundImage": "weather.jpg",
        "demo": "WeatherDashboard.gif",
        "alt": "Demo of weather dashboard application",
        "blurb": " — 5 day weather forcast for any city",
        "skills": [
            "Javascript",
            "API",
            "Local Storage"
        ],
        "links": {
            "deployed": "https://alicewestcreate.github.io/weather-dashboard/",
            "repo": "https://github.com/alicewestcreate/weather-dashboard.git"
        },
        "summ": "Weather dashboard application that allows users to search for and view weather information for different locations. The homepage features a search bar where users can enter the name of a city or zip code to retrieve weather data. Upon searching, the page displays the current weather conditions for the location, including temperature, humidity, wind speed, and a five-day forecast. ",
        "summary": {
            "overview": "A weather dashboard that allows users to input a location to receive a 5 day weather forecast for most places around the world.",
            "technology": [
                "Javascript",
                "APIs",
                "Data Storage",
                "Bootstrap"
            ],
            "features": [
                "Updates weather information dynamically based on user input",
                "Presents essential weather data in a clear and easy-to-read format",
                "Dynamically updates the background based on the weather forecast",
                "Stores recently searched for locations in local storage"
            ],
            "design": [
                "Uses Open Weather API",
                "Utilises local storage for enhanced user experience",
                "Generates information dynamically for increase load time"
            ],
            "challenges": "Although it was my first time working with a third-party API, I didn't face any major challenges. To get started, I familiarised myself with the fetch method and learned how to traverse the API data object to extract the necessary information for displaying it in HTML content. Before beginning the programming process, I created a pseudo code to guide me through each step in a logical format, which made the process smoother and more organised.",
            "testing": "this is testing",
            "results": "Overall, Pool Position was a great success, receiving positive feedback in design and concept, and as a team we accomplished a lot in a short amount of time. ",
            "future": [
                "Reorient to a mobile-first design",
                "Expand locations to cover the UK and beyond",
                "Implement filter functionality to sort by swimming spot type",
                "Incorporate a review rating system"
            ]
        }    
    }

]